{"version":3,"file":"static/js/519.5c5cc77c.chunk.js","mappings":"iOAEaA,EAAaC,EAAAA,GAAAA,MAAH,kGAOVC,EAAmBD,EAAAA,GAAAA,GAAH,uHAOhBE,EAAsBF,EAAAA,GAAAA,EAAH,mFAMnBG,EAAiBH,EAAAA,GAAAA,MAAH,+JAUdI,EAAYJ,EAAAA,GAAAA,OAAH,gN,kDCyCtB,EA3DkB,WAChB,OAAoBK,EAAAA,EAAAA,MAAbC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAS,WAAD,wBAAE,WAAMC,GAAN,gGAEqBT,EAAUS,EAAM,CACzCC,iBAAkB,qBAAGC,KAAgBF,QAHjC,OAEAG,EAFA,OAKNX,GAASY,EAAAA,EAAAA,IAAMD,IALT,gDAONE,EAAAA,GAAAA,MACE,mFARI,QAYRX,EAAOY,YAZC,yDAAF,mDAAC,KAeX,OACE,iCACE,kBAAMP,SAAUL,EAAOa,aAAvB,WACE,SAACrB,EAAD,sBACA,UAACF,EAAD,CAAYwB,QAAQ,QAApB,WACE,SAACrB,EAAD,sBAEA,SAACC,EAAD,CACEqB,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,OAAOlB,YAGzB,UAACb,EAAD,CAAYwB,QAAQ,WAApB,WACE,SAACrB,EAAD,wBAEA,SAACC,EAAD,CACEqB,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,OAAOjB,eAIzB,SAACT,EAAD,CAAWsB,KAAK,SAAhB,wBAGF,SAAC,KAAD,QClEOK,EAAe/B,EAAAA,GAAAA,QAAH,6EAKZgC,EAAQhC,EAAAA,GAAAA,IAAH,2HAQLiC,EAAoBjC,EAAAA,GAAAA,IAAH,gEAKjBkC,EAAmBlC,EAAAA,GAAAA,IAAH,oF,UCXd,SAASmC,IACtB,OACE,UAACJ,EAAD,YACE,SAACE,EAAD,WACE,SAACD,EAAD,CAAOI,IAAKC,EAAUC,IAAI,yBAE5B,SAACJ,EAAD,WACE,SAAC,EAAD,W","sources":["components/LogInForm/StyledLoginForm.jsx","components/LogInForm/LoginForm.jsx","pages/LoginPage/StyledLoginPage.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const InputLabel = styled.label`\r\n  display: block;\r\n  &:not(:last-child) {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n\r\nexport const LoginFormHeading = styled.h1`\r\n  margin-bottom: 20px;\r\n  margin-top: 0;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nexport const LoginFormInputNames = styled.p`\r\n  margin: 0;\r\n  font-weight: bold;\r\n  text-align: center;\r\n`;\r\n\r\nexport const LoginFormInput = styled.input`\r\n  border: none;\r\n  border-bottom: 1px solid #000;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border-bottom: 2px solid #000;\r\n  }\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  display: block;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  background-color: #000;\r\n  color: #fff;\r\n  margin: auto;\r\n  font-weight: bold;\r\n`;\r\n","import { useFormik } from 'formik';\r\nimport {\r\n  InputLabel,\r\n  LoginFormHeading,\r\n  LoginFormInput,\r\n  LoginFormInputNames,\r\n  SubmitBtn,\r\n} from './StyledLoginForm';\r\nimport { useLogInUserMutation } from 'redux/api/userApiSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from 'redux/auth/authSlice';\r\n\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst LogInForm = () => {\r\n  const [logInUser] = useLogInUserMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: async user => {\r\n      try {\r\n        const returnedUser = await logInUser(user, {\r\n          selectFromResult: ({ data }) => data.user,\r\n        });\r\n        dispatch(logIn(returnedUser));\r\n      } catch (error) {\r\n        toast.error(\r\n          'Wrong username or e-mail. If you`re not signed up yet, you`re welcome to do it!'\r\n        );\r\n      }\r\n\r\n      formik.resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <LoginFormHeading>Log In</LoginFormHeading>\r\n        <InputLabel htmlFor=\"email\">\r\n          <LoginFormInputNames>E-mail</LoginFormInputNames>\r\n\r\n          <LoginFormInput\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n          />\r\n        </InputLabel>\r\n        <InputLabel htmlFor=\"password\">\r\n          <LoginFormInputNames>Password</LoginFormInputNames>\r\n\r\n          <LoginFormInput\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n          />\r\n        </InputLabel>\r\n\r\n        <SubmitBtn type=\"submit\">Submit</SubmitBtn>\r\n      </form>\r\n\r\n      <Toaster />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogInForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const LoginSection = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  right: 0;\r\n  height: 92vh;\r\n`;\r\nexport const LoginImageWrapper = styled.div`\r\n  position: relative;\r\n  width: 670px;\r\n`;\r\n\r\nexport const LoginFormWrapper = styled.div`\r\n  padding-top: 25vh;\r\n  max-width: 250px;\r\n  margin: auto;\r\n`;\r\n","import LogInForm from '../../components/LogInForm/LoginForm';\r\nimport {\r\n  LoginSection,\r\n  Image,\r\n  LoginImageWrapper,\r\n  LoginFormWrapper,\r\n} from './StyledLoginPage';\r\nimport loginImg from 'images/loginpage.jpeg';\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <LoginSection>\r\n      <LoginImageWrapper>\r\n        <Image src={loginImg} alt=\"hacker girl login\" />\r\n      </LoginImageWrapper>\r\n      <LoginFormWrapper>\r\n        <LogInForm />\r\n      </LoginFormWrapper>\r\n    </LoginSection>\r\n  );\r\n}\r\n"],"names":["InputLabel","styled","LoginFormHeading","LoginFormInputNames","LoginFormInput","SubmitBtn","useLogInUserMutation","logInUser","dispatch","useDispatch","formik","useFormik","initialValues","email","password","onSubmit","user","selectFromResult","data","returnedUser","logIn","toast","resetForm","handleSubmit","htmlFor","id","name","type","onChange","handleChange","value","values","LoginSection","Image","LoginImageWrapper","LoginFormWrapper","LoginPage","src","loginImg","alt"],"sourceRoot":""}