{"version":3,"file":"static/js/628.21bf5be0.chunk.js","mappings":"yOAEaA,EAAaC,EAAAA,GAAAA,MAAH,kGAOVC,EAAoBD,EAAAA,GAAAA,GAAH,uHAOjBE,EAAuBF,EAAAA,GAAAA,EAAH,mFAMpBG,EAAkBH,EAAAA,GAAAA,MAAH,+JAUfI,EAAYJ,EAAAA,GAAAA,OAAH,gN,wCCkDtB,EArEmB,WACjB,OAAqBK,EAAAA,EAAAA,MAAdC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAS,WAAD,wBAAE,WAAMC,GAAN,gGAEqBV,EAAWU,EAAM,CAC1CC,iBAAkB,qBAAGC,KAAgBF,QAHjC,OAEAG,EAFA,OAKNZ,GAASa,EAAAA,EAAAA,IAASD,IALZ,gDAONE,EAAAA,GAAAA,MACE,gFARI,QAYRZ,EAAOa,YAZC,yDAAF,mDAAC,KAgBX,OACE,iCACE,kBAAMP,SAAUN,EAAOc,aAAvB,WACE,SAACtB,EAAD,uBACA,UAACF,EAAD,CAAYyB,QAAQ,OAApB,WACE,SAACtB,EAAD,oBAEA,SAACC,EAAD,CACEsB,GAAG,OACHb,KAAK,OACLc,KAAK,OACLC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,OAAOlB,WAGzB,UAACb,EAAD,CAAYyB,QAAQ,QAApB,WACE,SAACtB,EAAD,sBAEA,SAACC,EAAD,CACEsB,GAAG,QACHb,KAAK,QACLc,KAAK,QACLC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,OAAOjB,YAGzB,UAACd,EAAD,CAAYyB,QAAQ,WAApB,WACE,SAACtB,EAAD,wBAEA,SAACC,EAAD,CACEsB,GAAG,WACHb,KAAK,WACLc,KAAK,WACLC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,OAAOhB,eAGzB,SAACV,EAAD,CAAWsB,KAAK,SAAhB,yBAEF,SAAC,KAAD,QC3EOK,EAAkB/B,EAAAA,GAAAA,QAAH,6EAKfgC,EAAQhC,EAAAA,GAAAA,IAAH,2HASLiC,EAAuBjC,EAAAA,GAAAA,IAAH,gEAKpBkC,EAAsBlC,EAAAA,GAAAA,IAAH,oF,UCZjB,SAASmC,IACtB,OACE,UAACJ,EAAD,YACE,SAACG,EAAD,WACE,SAAC,EAAD,OAEF,SAACD,EAAD,WACE,SAACD,EAAD,CAAOI,IAAKC,EAAaC,IAAI,2B","sources":["components/SignUpForm/StyledSignUpForm.jsx","components/SignUpForm/SignUpForm.jsx","pages/RegisterPage/StyledRegisterPage.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const InputLabel = styled.label`\r\n  display: block;\r\n  &:not(:last-child) {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n\r\nexport const SignUpFormHeading = styled.h1`\r\n  margin-bottom: 20px;\r\n  margin-top: 0;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SignUpFormInputNames = styled.p`\r\n  margin: 0;\r\n  font-weight: bold;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SignUpFormInput = styled.input`\r\n  border: none;\r\n  border-bottom: 1px solid #000;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border-bottom: 2px solid #000;\r\n  }\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  display: block;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  background-color: #000;\r\n  color: #fff;\r\n  margin: auto;\r\n  font-weight: bold;\r\n`;\r\n","import { useFormik } from 'formik';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport {\r\n  InputLabel,\r\n  SignUpFormHeading,\r\n  SignUpFormInput,\r\n  SignUpFormInputNames,\r\n  SubmitBtn,\r\n} from './StyledSignUpForm';\r\nimport { useSignUpUserMutation } from 'redux/api/userApiSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from 'redux/auth/authSlice';\r\n\r\nconst SignUpForm = () => {\r\n  const [signUpUser] = useSignUpUserMutation();\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: async user => {\r\n      try {\r\n        const returnedUser = await signUpUser(user, {\r\n          selectFromResult: ({ data }) => data.user,\r\n        });\r\n        dispatch(register(returnedUser));\r\n      } catch (error) {\r\n        toast.error(\r\n          'Something went wrong...Possibly, this user already exists, please try again!'\r\n        );\r\n      }\r\n\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <SignUpFormHeading>Sign up</SignUpFormHeading>\r\n        <InputLabel htmlFor=\"name\">\r\n          <SignUpFormInputNames>Name</SignUpFormInputNames>\r\n\r\n          <SignUpFormInput\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"name\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n          />\r\n        </InputLabel>\r\n        <InputLabel htmlFor=\"email\">\r\n          <SignUpFormInputNames>E-mail</SignUpFormInputNames>\r\n\r\n          <SignUpFormInput\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n          />\r\n        </InputLabel>\r\n        <InputLabel htmlFor=\"password\">\r\n          <SignUpFormInputNames>Password</SignUpFormInputNames>\r\n\r\n          <SignUpFormInput\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n          />\r\n        </InputLabel>\r\n        <SubmitBtn type=\"submit\">Sign up</SubmitBtn>\r\n      </form>\r\n      <Toaster />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const RegisterSection = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 92vh;\r\n`;\r\n\r\nexport const RegisterImageWrapper = styled.div`\r\n  position: relative;\r\n  width: 670px;\r\n`;\r\n\r\nexport const RegisterFormWrapper = styled.div`\r\n  padding-top: 25vh;\r\n  max-width: 250px;\r\n  margin: auto;\r\n`;\r\n","import SignUpForm from 'components/SignUpForm';\r\nimport {\r\n  RegisterSection,\r\n  Image,\r\n  RegisterImageWrapper,\r\n  RegisterFormWrapper,\r\n} from './StyledRegisterPage';\r\nimport registerImg from 'images/registerpage.jpeg';\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <RegisterSection>\r\n      <RegisterFormWrapper>\r\n        <SignUpForm />\r\n      </RegisterFormWrapper>\r\n      <RegisterImageWrapper>\r\n        <Image src={registerImg} alt=\"girl with robot\" />\r\n      </RegisterImageWrapper>\r\n    </RegisterSection>\r\n  );\r\n}\r\n"],"names":["InputLabel","styled","SignUpFormHeading","SignUpFormInputNames","SignUpFormInput","SubmitBtn","useSignUpUserMutation","signUpUser","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","user","selectFromResult","data","returnedUser","register","toast","resetForm","handleSubmit","htmlFor","id","type","onChange","handleChange","value","values","RegisterSection","Image","RegisterImageWrapper","RegisterFormWrapper","RegisterPage","src","registerImg","alt"],"sourceRoot":""}